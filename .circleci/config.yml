version: 2.1

defaults: &defaults
  working_directory: ~/app

rust_defaults: &rust_defaults
  <<: *defaults
  docker:
    - image: cimg/rust:1.61

go_defaults: &go_defaults
  <<: *defaults
  docker:
    - image: cimg/go:1.18

jobs:
  checkout-repo:
    <<: *go_defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - persist_to_workspace:
          root: .
          paths: .

  go-test-linux:
    <<: *go_defaults
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Run Tests
          command: |
            cd ~/app
            go mod download github.com/celo-org/celo-bls-go-linux
            go run cmd/distribute/distribute.go . ./platforms/platforms_linux.json
            echo -e "\nreplace github.com/celo-org/celo-bls-go-linux => ./platforms/repos/celo-bls-go-linux" >> go.mod
            go get ./bls
            go test ./bls ./snark

  go-test-all-targets:
    <<: *go_defaults
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - run: 
          name: Run Tests
          command: |
            cd ~/app
            go mod download github.com/celo-org/celo-bls-go-linux
            go run cmd/distribute/distribute.go . ./platforms/platforms.json
            echo -e "\nreplace github.com/celo-org/celo-bls-go-linux => ./platforms/repos/celo-bls-go-linux" >> go.mod
            go get ./bls
            go test ./bls ./snark
      - store_artifacts:
          path: ~/app/go.mod

  build-libs-linux:
    <<: *rust_defaults
    working_directory: ~/app
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install rustup
          command: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run:
          name: Build release libs
          command: |
            git submodule update --init --recursive
            ./scripts/release_linux.sh
      - persist_to_workspace:
          root: .
          paths: .

  build-and-bundle-libs-all-targets:
    working_directory: ~/app
    macos:
      xcode: 13.4.1
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install rustup
          command: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run:
          name: Build release libs
          command: |
            git submodule update --init --recursive
            ./scripts/release.sh
      - store_artifacts:
          path: ~/app/libs.tar.gz
      - persist_to_workspace:
          root: .
          paths: .

workflows:
  version: 2
  run-tests:
    jobs:
      - checkout-repo

      # build-libs-linux and go-test-linux builds for linux and runs tests.
      - build-libs-linux:
          requires:
            - checkout-repo
      - go-test-linux:
          requires:
            - build-libs-linux

      # build-and-bundle-libs-all-targets and go-test-all-targets builds on all architectures,
      # uploads the tar.gz bundled artifacts, then runs tests.
      # Job is long-running and not needed on most commits, and so needs to be approved by a
      # contributor before this workflow will run.
      - approval-to-bundle:
          type: approval
      - build-and-bundle-libs-all-targets:
          requires:
            - approval-to-bundle
            - checkout-repo
      - go-test-all-targets:
          requires:
            - build-and-bundle-libs-all-targets
